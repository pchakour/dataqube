

      <source>
        @type tail
        path example.log
        tag LOG
        read_from_head true
        path_key filepath
        
        <parse>
          @type none
        </parse>
      </source>
    
        <filter *>
          @type dataqube
          init ''
          code "${
            if record.key?('filepath') && record['filepath'].end_with?('.json')
              json_result = parse_json(record['message'])
              record = merge_hash(record, json_result)
              record['message'] = json_result['message']
            end
            record
          }"
        </filter>
      

      <filter *>
        @type record_modifier
        # set UTF-8 encoding information to string.
        char_encoding utf-8
      </filter>
      <filter *>
        @type dataqube
        init "${
          @map = { 'count' => 0, 'broadcasted_metric' => 0 }
        }"
        code "${
          @map['count'] = @map['count'] + 1
          if @map['count'] - @map['broadcasted_metric'] > 100
            @map['broadcasted_metric'] = @map['count']
            puts '{ \"metrics\": { \"received_events\": ' + @map['broadcasted_metric'].to_s + ' } }'
          end
          record
        }"
      </filter>
    
<filter *>

  @type dataqube
  init "${
    
  }"
  code "${
    begin
              if !record.key?('_dataqube.tags')
          record['_dataqube.tags'] = []
        end
        record['_dataqube.tags'].append('EXAMPLE_UUID')
      record['my_super_id'] = uuid()
    
    rescue => e
      puts 'Error when excuting each code of rule EXAMPLE_UUID tags=' + record['_dataqube.tags'].to_s
      raise e
    end
    record
  }"
</filter>

      <filter *>
        @type dataqube
        init ""
        code "${
          if !record.key?('_dataqube.quality')
            record.delete('@metadata')
          end
          record
        }"
      </filter>
    

      <match *>
        @type stdout
        output_type json
      </match>
    

      <label @FLUENT_LOG>
        <match fluent.*>
          @type autoshutdown
          timeout 2
        </match>
      </label>
      